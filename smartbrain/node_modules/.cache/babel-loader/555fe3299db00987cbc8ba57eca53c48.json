{"ast":null,"code":"var _jsxFileName = \"/media/mdlarasati/DATA/webdev_practices/facedetector-1/smartbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/navigation/Navigation';\nimport Logo from './components/logo/Logo';\nimport Rank from './components/rank/Rank';\nimport SignIn from './components/signin/SignIn';\nimport Register from './components/register/Register';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/facerecognition/FaceRecognition';\nconst app = new Clarifai.App({\n  apiKey: 'f1d28c6c50554a0aa7c391d9ebebb296'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          password: data.password,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottownRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageURL: this.state.input\n      });\n      app.models.predict('a403429f2ddf4b49b307e318f00e528b', this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {});\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageURL: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        password: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: {\n        particles: {\n          number: {\n            value: 120,\n            density: {\n              enable: true,\n              value_area: 1000\n            }\n          },\n          line_linked: {\n            shadow: {\n              enable: true,\n              color: '#003f5c'\n            }\n          },\n          color: {\n            value: '#003f5c'\n          },\n          links: {\n            color: '#003f5c'\n          }\n        }\n      },\n      options: {\n        background: {\n          color: {\n            value: \"003f5c\"\n          }\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      onRouteChange: this.onRouteChange,\n      isSignedIn: this.state.isSignedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }), this.state.route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageUrl: this.state.imageURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    })) : this.state.route === 'signin' ? /*#__PURE__*/React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/media/mdlarasati/DATA/webdev_practices/facedetector-1/smartbrain/src/App.js"],"names":["React","Component","Particles","Navigation","Logo","Rank","SignIn","Register","ImageLinkForm","Clarifai","FaceRecognition","app","App","apiKey","constructor","loadUser","data","setState","user","id","name","email","password","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottownRow","bottom_row","displayFaceBox","box","console","log","onInputChange","event","input","target","value","onButtonSubmit","imageURL","state","models","predict","then","response","fetch","catch","err","onRouteChange","route","isSignedIn","render","particles","number","density","enable","value_area","line_linked","shadow","color","links","background"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Particles from 'react-particles-js'\nimport Navigation from './components/navigation/Navigation'\nimport Logo from './components/logo/Logo'\nimport Rank from './components/rank/Rank'\nimport SignIn from './components/signin/SignIn'\nimport Register from './components/register/Register'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport Clarifai from 'clarifai'\nimport FaceRecognition from './components/facerecognition/FaceRecognition'\n\nconst app = new Clarifai.App({\n  apiKey: 'f1d28c6c50554a0aa7c391d9ebebb296'\n});\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageURL: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id:'',\n        name:'',\n        email:'',\n        password:'',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser= (data) =>{\n    this.setState({user:{\n      id:data.id,\n      name:data.name,\n      email:data.email,\n      password:data.password,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box\n    const image = document.getElementById('inputimage')\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottownRow: height - (clarifaiFace.bottom_row *height)\n    }\n  }\n\n  displayFaceBox = (box) =>{\n    console.log(box)\n    this.setState({box: box})\n  }\n\n  onInputChange=(event)=>{\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = ()=>{\n    this.setState({imageURL: this.state.input});\n    app.models.predict('a403429f2ddf4b49b307e318f00e528b', this.state.input).then(response=> {\n      if(response){\n        fetch('http://localhost:3000/image', {\n          \n        })\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    }).catch(err=>console.log(err))\n  }\n\n  onRouteChange = (route) => {\n    if(route === 'signout'){\n      this.setState({isSignedIn:false})\n    }else if (route === 'home'){\n      this.setState({isSignedIn:true})\n    }\n    this.setState({route:route })\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n         <Particles \n                className='particles'\n                params={{\n                  particles: {\n                    number:{\n                      value:120,\n                      density:{\n                        enable:true,\n                        value_area:1000\n                      }\n                    },\n                    line_linked:{\n                      shadow:{\n                        enable:true,\n                        color:'#003f5c'\n                      }\n                    },\n                  color:{\n                    value: '#003f5c'\n                  },\n                  links:{\n                    color: '#003f5c'\n                  }}\n                }}\n                options={{\n                  background: {\n                    color: {\n                      value: \"003f5c\",\n                    }\n                  }\n                }}\n              />\n        <Navigation onRouteChange={this.onRouteChange} isSignedIn={this.state.isSignedIn} />\n        {this.state.route === 'home' ?\n            <div>\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries} />\n              <ImageLinkForm onInputChange = {this.onInputChange} onButtonSubmit = {this.onButtonSubmit}/>\n              <FaceRecognition box = {this.state.box} imageUrl={this.state.imageURL} /> \n            </div>\n            : (\n                this.state.route === 'signin'?\n                <SignIn loadUser = {this.loadUser} onRouteChange={this.onRouteChange} />\n                : <Register loadUser = {this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n            \n              }\n      </div>\n    );\n  } \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}